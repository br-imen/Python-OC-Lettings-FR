name: CI/CD Pipeline

on:
  push:
    branches:
      - '**'  # This will trigger on any branch
  pull_request:
    branches:
      - '**'  # This will trigger on any branch

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8 pytest pytest-cov
        env:
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
      
      - name: Lint code with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=99 --statistics
        env:
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
      
      - name: Run tests with coverage
        run: |
          python manage.py migrate
          pytest --cov --cov-fail-under=80
        env:
          SECRET_KEY: ${{ secrets.SECRET_KEY }}

  build:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/master'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin
      
      - name: Build Docker image
        run: |
          docker build \
          -t ${{ secrets.DOCKER_HUB_USERNAME }}/oc_lettings_site:latest .
      
      - name: Push Docker image to Docker Hub
        run: docker push ${{ secrets.DOCKER_HUB_USERNAME }}/oc_lettings_site:latest
        
  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master'

    steps:
      - name: deploy to render
        run: |
          curl "${{ secrets.RENDER_DEPLOY_HOOK_URL }}"
